<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced
fontfamily=Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>208</y>
      <w>360</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>IOArgument
--
name
type
dims = {}
mode = MODE_MOVE
position
link
--
MODE_CONST = 1
MODE_MOVE  = 2
MODE_COPY  = 3
MODE_NEW   = 1
MODE_INPUT = 2
--
this = IOArgument(name, type, position, dims, mode)
tf = isScalar(this)
setLink(this, linkedInputArg)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>24</y>
      <w>416</w>
      <h>600</h>
    </coordinates>
    <panel_attributes>snippet
--
Variable
InputArg
OutputArg
Coder
fingerPrint
tf_explicit = false
--
sourceCode = {}
language = 'c++'
Generator
--
mexPath
--
this = snippet(src, opt)
explicit(this, tf)
list(this)
edit(this)
compileMex(this)
reset(this)
deleteBinary(this)
run(this, flag)
tf = isCompiled(this)
--
precompile(this)
compile(this, funName)
generateGateway(this)
[gateway, mexfile, ext] = getFileName(this)
--
tf = handlePragma(this, src, tf_precompilation)
Arg = addInputArgument(this, v)
Arg = addOutputArgument(this, v)
Arg = addIOArgumentHelper(this, v)
--
[var, pos] = getVariable(this, name)
--
wd = getWorkingDirectory()
fp = generateFingerPrint(src)
ver = getVersion()
info()
clear()
--
declaredArguments = parseArgumentDeclaration(declr)
msg = parsingErrorMsg(str, k)
[tf, varargout] = checkVariableType(vartype, lang)
[tf, arrayType, cppType] = checkVariableTypeCpp(vartype)
[tf, classId, cType, mexType] = checkVariableTypeC(vartype)
[tf, classId, fType] = checkVariableTypeFortran(vartype)
tf = isVariableName(str)
--
[user, userDir] = getuserdir()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>48</y>
      <w>288</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>snippetVariable
--
name
type
--
this = snippetVariable(name, type)
[var, pos] = findByName(this, name)
[this, pos] = insert(this, v)
code = declare(this, Cdr)
tf = isEqual(this, other)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1144</x>
      <y>160</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>24</x>
      <y>88</y>
      <w>384</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>snippetCoder
--
srcHeader = {}
srcMain = {}
srcBeforeCode = {}
srcCode = {}
srcAfterCode = {}
srcEnd = {}
--
lineNumber
--
this = snippetCoder(cppHeader, cppEnd)
reset(this)
buffer = header(this, src, alias)
buffer = beforeCode(this, src, alias)
buffer = code(this, src, alias)
buffer = afterCode(this, src, alias)
list(this, fileName)
listSection(this, section, fid, tf_displayLineNumbers)
--
buffer = preprocessing(src, alias)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>64</y>
      <w>128</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;190.0;140.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>72</y>
      <w>128</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;180.0;140.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>88</y>
      <w>104</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>48</y>
      <w>128</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>136</x>
      <y>376</y>
      <w>272</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>/snippetGenerator/
--
--
/Cdr = coder()/
/declareAsInput(Arg, Cdr)/
/declareAsOutput(Arg, Cdr)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>144</y>
      <w>104</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;50.0;10.0;50.0;300.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>136</x>
      <y>480</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>snippetCppGenerator
--
--
Cdr = coder()
declareAsInput(Arg, Cdr)
declareAsOutput(Arg, Cdr)
--
declareAsMatrixInput(Arg, Cdr)
declareAsScalarInput(Arg, Cdr)
declareAsMatrixOutput(Arg, Cdr)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>440</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>136</x>
      <y>624</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>snippetCGenerator
--
--
Cdr = coder()
declareAsInput(Arg, Cdr)
declareAsOutput(Arg, Cdr)
--
declareAsMatrixInput(Arg, Cdr)
declareAsScalarInput(Arg, Cdr)
declareAsMatrixOutput(Arg, Cdr)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>376</y>
      <w>40</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;10.0;10.0;320.0;30.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>136</x>
      <y>768</y>
      <w>272</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>snippetFortranGenerator
--
--
Cdr = coder()
declareAsInput(Arg, Cdr)
declareAsOutput(Arg, Cdr)
--
bg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>96</x>
      <y>376</y>
      <w>56</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0;10.0;500.0;50.0;500.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>208</y>
      <w>56</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>424</x>
      <y>768</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Not yet 
implemented
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
